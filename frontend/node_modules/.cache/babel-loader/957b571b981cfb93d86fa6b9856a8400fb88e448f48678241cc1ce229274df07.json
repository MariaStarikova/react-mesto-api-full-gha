{"ast":null,"code":"var _jsxFileName = \"/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDeletePopup from './CardDeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [selectedCardToDelete, setSelectedCardToDelete] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('isLoggedIn') || false);\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   api\n  //     .getInfoUser()\n  //     .then(userInfo => {\n  //       setCurrentUser({\n  //         name: userInfo.name,\n  //         about: userInfo.about,\n  //         avatar: userInfo.avatar,\n  //         id: userInfo._id\n  //       });\n  //       // console.log(userInfo);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then(cardsData => {\n  //       // console.log('cardsData:', cardsData);\n  //       setCards(cardsData);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      Promise.all([api.getInfoUser(token)], api.getInitialCards(token)).then(([userInfo, cardsData]) => {\n        setCurrentUser({\n          name: userInfo.name,\n          about: userInfo.about,\n          avatar: userInfo.avatar,\n          id: userInfo._id\n        });\n        setCards(cardsData);\n      }).catch(error => {\n        console.error(`Ошибка при получении данных: ${error}`);\n      });\n    }\n  }, [loggedIn]);\n  function handleRegister(email, password) {\n    auth.register(email, password).then(() => {\n      setIsRegisterSuccess(true);\n      setIsInfoTooltipOpen(true);\n      navigate('/sign-in', {\n        replace: true\n      });\n    }).catch(err => {\n      console.log(err);\n      setIsRegisterSuccess(false);\n      setIsInfoTooltipOpen(true);\n    }).finally();\n  }\n  function handleLogin({\n    email,\n    password\n  }) {\n    auth.authorize(email, password).then(jwt => {\n      if (jwt.token) {\n        setEmail(email);\n        setLoggedIn(true);\n      }\n    }).catch(err => {\n      console.log(err);\n      setIsRegisterSuccess(false);\n      setIsInfoTooltipOpen(true);\n    });\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser.id);\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n      return;\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n      return;\n    }\n  }\n  function handleCardDelete() {\n    api.deleteCard(selectedCardToDelete._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== selectedCardToDelete._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleDeleteClick(card) {\n    // console.log(card);\n    setIsCardDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    // console.log(card);\n    // console.log(handleCardClick);\n  }\n\n  function closeAllPopups() {\n    // console.log('Попапы закрыты');\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardDeletePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n  function handleUpdateUser(user) {\n    api.updateUserInfo(user).then(updatedFields => {\n      setCurrentUser(prevUser => ({\n        ...prevUser,\n        name: updatedFields.name || prevUser.name,\n        about: updatedFields.about || prevUser.about\n      }));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleUpdateAvatar(data) {\n    api.updateUserAvatar(data).then(updatedData => {\n      setCurrentUser(prevUser => ({\n        ...prevUser,\n        avatar: updatedData.avatar || prevUser.avatar\n      }));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            isRegisterSuccess: isRegisterSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: Main,\n            loggedIn: loggedIn,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            onDeleteClick: handleDeleteClick,\n            onCardLike: handleCardLike,\n            cards: cards,\n            setCards: setCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        success: isRegisterSuccess\n        // onUpdateUser={handleUpdateUser}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardDeletePopup, {\n        isOpen: isCardDeletePopupOpen,\n        onClose: closeAllPopups,\n        onCardDelete: () => handleCardDelete(selectedCardToDelete)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eWKBP1Js/xgcFSY08MTIKRZRB1c=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Route","Routes","Navigate","useNavigate","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CardDeletePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardDeletePopupOpen","setIsCardDeletePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isRegisterSuccess","setIsRegisterSuccess","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","selectedCardToDelete","setSelectedCardToDelete","loggedIn","setLoggedIn","localStorage","getItem","email","setEmail","navigate","token","Promise","all","getInfoUser","getInitialCards","then","userInfo","cardsData","name","about","avatar","id","_id","catch","error","console","handleRegister","password","register","replace","err","log","finally","handleLogin","authorize","jwt","handleCardLike","card","isLiked","likes","some","i","addLike","newCard","state","map","c","removeLike","handleCardDelete","deleteCard","filter","closeAllPopups","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteClick","handleCardClick","handleUpdateUser","user","updateUserInfo","updatedFields","prevUser","handleUpdateAvatar","data","updateUserAvatar","updatedData","handleAddPlaceSubmit","addNewCard","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onDeleteClick","onCardLike","isOpen","onClose","success","onUpdateUser","onCardDelete","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDeletePopup from './CardDeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [selectedCardToDelete, setSelectedCardToDelete] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('isLoggedIn') || false);\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   api\n  //     .getInfoUser()\n  //     .then(userInfo => {\n  //       setCurrentUser({\n  //         name: userInfo.name,\n  //         about: userInfo.about,\n  //         avatar: userInfo.avatar,\n  //         id: userInfo._id\n  //       });\n  //       // console.log(userInfo);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then(cardsData => {\n  //       // console.log('cardsData:', cardsData);\n  //       setCards(cardsData);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      Promise.all([api.getInfoUser(token)], api.getInitialCards(token))\n        .then(([userInfo, cardsData]) => {\n          setCurrentUser({\n            name: userInfo.name,\n            about: userInfo.about,\n            avatar: userInfo.avatar,\n            id: userInfo._id\n          });\n          setCards(cardsData);\n        })\n        .catch(error => {\n          console.error(`Ошибка при получении данных: ${error}`);\n        });\n    }\n  }, [loggedIn]);\n\n  function handleRegister(email, password) {\n    auth\n      .register(email, password)\n      .then(() => {\n        setIsRegisterSuccess(true);\n        setIsInfoTooltipOpen(true);\n        navigate('/sign-in', { replace: true });\n      })\n      .catch(err => {\n        console.log(err);\n        setIsRegisterSuccess(false);\n        setIsInfoTooltipOpen(true);\n      })\n      .finally();\n  }\n\n  function handleLogin({ email, password }) {\n    auth\n      .authorize(email, password)\n      .then(jwt => {\n        if (jwt.token) {\n          setEmail(email);\n          setLoggedIn(true);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        setIsRegisterSuccess(false);\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser.id);\n\n    if (!isLiked) {\n      api\n        .addLike(card._id)\n        .then(newCard => {\n          setCards(state => state.map(c => (c._id === card._id ? newCard : c)));\n        })\n        .catch(err => {\n          console.error(`Ошибка: ${err}`);\n        });\n      return;\n    } else {\n      api\n        .removeLike(card._id)\n        .then(newCard => {\n          setCards(state => state.map(c => (c._id === card._id ? newCard : c)));\n        })\n        .catch(err => {\n          console.error(`Ошибка: ${err}`);\n        });\n      return;\n    }\n  }\n\n  function handleCardDelete() {\n    api\n      .deleteCard(selectedCardToDelete._id)\n      .then(() => {\n        setCards(cards => cards.filter(c => c._id !== selectedCardToDelete._id));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteClick(card) {\n    // console.log(card);\n    setIsCardDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    // console.log(card);\n    // console.log(handleCardClick);\n  }\n\n  function closeAllPopups() {\n    // console.log('Попапы закрыты');\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardDeletePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser(user) {\n    api\n      .updateUserInfo(user)\n      .then(updatedFields => {\n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          name: updatedFields.name || prevUser.name,\n          about: updatedFields.about || prevUser.about\n        }));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .updateUserAvatar(data)\n      .then(updatedData => {\n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          avatar: updatedData.avatar || prevUser.avatar\n        }));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .addNewCard(card)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header loggedIn={loggedIn} email={email} />\n        <Routes>\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register handleRegister={handleRegister} isRegisterSuccess={isRegisterSuccess} />\n            }\n          />\n          <Route\n            path=\"/sign-in\"\n            element={<Login handleLogin={handleLogin} loggedIn={loggedIn} />}\n          />\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                element={Main}\n                loggedIn={loggedIn}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onDeleteClick={handleDeleteClick}\n                onCardLike={handleCardLike}\n                cards={cards}\n                setCards={setCards}\n              />\n            }\n          />\n\n          {/* <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onDeleteClick={handleDeleteClick}\n            onCardLike={handleCardLike}\n            cards={cards}\n            setCards={setCards}\n          /> */}\n        </Routes>\n        {/* {isLoggedIn && <Footer />} */}\n        <Footer />\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          success={isRegisterSuccess}\n          // onUpdateUser={handleUpdateUser}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <CardDeletePopup\n          isOpen={isCardDeletePopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={() => handleCardDelete(selectedCardToDelete)}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,GAAG,QAAQ,cAAc;AAClC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,KAAKC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC6B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAAC+B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC+C,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC;EACrF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmD,QAAQ,GAAG9C,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAN,SAAS,CAAC,MAAM;IACd,MAAMqD,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAII,KAAK,EAAE;MACTC,OAAO,CAACC,GAAG,CAAC,CAAC5C,GAAG,CAAC6C,WAAW,CAACH,KAAK,CAAC,CAAC,EAAE1C,GAAG,CAAC8C,eAAe,CAACJ,KAAK,CAAC,CAAC,CAC9DK,IAAI,CAAC,CAAC,CAACC,QAAQ,EAAEC,SAAS,CAAC,KAAK;QAC/BnB,cAAc,CAAC;UACboB,IAAI,EAAEF,QAAQ,CAACE,IAAI;UACnBC,KAAK,EAAEH,QAAQ,CAACG,KAAK;UACrBC,MAAM,EAAEJ,QAAQ,CAACI,MAAM;UACvBC,EAAE,EAAEL,QAAQ,CAACM;QACf,CAAC,CAAC;QACFtB,QAAQ,CAACiB,SAAS,CAAC;MACrB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;MACxD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC;EAEd,SAASuB,cAAcA,CAACnB,KAAK,EAAEoB,QAAQ,EAAE;IACvCjD,IAAI,CACDkD,QAAQ,CAACrB,KAAK,EAAEoB,QAAQ,CAAC,CACzBZ,IAAI,CAAC,MAAM;MACVrB,oBAAoB,CAAC,IAAI,CAAC;MAC1BF,oBAAoB,CAAC,IAAI,CAAC;MAC1BiB,QAAQ,CAAC,UAAU,EAAE;QAAEoB,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC,CAAC,CAAC,CACDN,KAAK,CAACO,GAAG,IAAI;MACZL,OAAO,CAACM,GAAG,CAACD,GAAG,CAAC;MAChBpC,oBAAoB,CAAC,KAAK,CAAC;MAC3BF,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDwC,OAAO,CAAC,CAAC;EACd;EAEA,SAASC,WAAWA,CAAC;IAAE1B,KAAK;IAAEoB;EAAS,CAAC,EAAE;IACxCjD,IAAI,CACDwD,SAAS,CAAC3B,KAAK,EAAEoB,QAAQ,CAAC,CAC1BZ,IAAI,CAACoB,GAAG,IAAI;MACX,IAAIA,GAAG,CAACzB,KAAK,EAAE;QACbF,QAAQ,CAACD,KAAK,CAAC;QACfH,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,CACDmB,KAAK,CAACO,GAAG,IAAI;MACZL,OAAO,CAACM,GAAG,CAACD,GAAG,CAAC;MAChBpC,oBAAoB,CAAC,KAAK,CAAC;MAC3BF,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,SAAS4C,cAAcA,CAACC,IAAI,EAAE;IAC5B,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,GAAG,KAAKzB,WAAW,CAACwB,EAAE,CAAC;IAE9D,IAAI,CAACiB,OAAO,EAAE;MACZtE,GAAG,CACA0E,OAAO,CAACL,IAAI,CAACf,GAAG,CAAC,CACjBP,IAAI,CAAC4B,OAAO,IAAI;QACf3C,QAAQ,CAAC4C,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACxB,GAAG,KAAKe,IAAI,CAACf,GAAG,GAAGqB,OAAO,GAAGG,CAAE,CAAC,CAAC;MACvE,CAAC,CAAC,CACDvB,KAAK,CAACO,GAAG,IAAI;QACZL,OAAO,CAACD,KAAK,CAAE,WAAUM,GAAI,EAAC,CAAC;MACjC,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACL9D,GAAG,CACA+E,UAAU,CAACV,IAAI,CAACf,GAAG,CAAC,CACpBP,IAAI,CAAC4B,OAAO,IAAI;QACf3C,QAAQ,CAAC4C,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACxB,GAAG,KAAKe,IAAI,CAACf,GAAG,GAAGqB,OAAO,GAAGG,CAAE,CAAC,CAAC;MACvE,CAAC,CAAC,CACDvB,KAAK,CAACO,GAAG,IAAI;QACZL,OAAO,CAACD,KAAK,CAAE,WAAUM,GAAI,EAAC,CAAC;MACjC,CAAC,CAAC;MACJ;IACF;EACF;EAEA,SAASkB,gBAAgBA,CAAA,EAAG;IAC1BhF,GAAG,CACAiF,UAAU,CAAChD,oBAAoB,CAACqB,GAAG,CAAC,CACpCP,IAAI,CAAC,MAAM;MACVf,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACmD,MAAM,CAACJ,CAAC,IAAIA,CAAC,CAACxB,GAAG,KAAKrB,oBAAoB,CAACqB,GAAG,CAAC,CAAC;MACxE6B,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACD5B,KAAK,CAACO,GAAG,IAAI;MACZL,OAAO,CAACD,KAAK,CAAE,WAAUM,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASsB,sBAAsBA,CAAA,EAAG;IAChCpE,yBAAyB,CAAC,IAAI,CAAC;EACjC;EAEA,SAASqE,mBAAmBA,CAAA,EAAG;IAC7BnE,sBAAsB,CAAC,IAAI,CAAC;EAC9B;EAEA,SAASoE,qBAAqBA,CAAA,EAAG;IAC/BlE,wBAAwB,CAAC,IAAI,CAAC;EAChC;EAEA,SAASmE,iBAAiBA,CAAClB,IAAI,EAAE;IAC/B;IACA/C,wBAAwB,CAAC,IAAI,CAAC;IAC9BY,uBAAuB,CAACmC,IAAI,CAAC;EAC/B;EAEA,SAASmB,eAAeA,CAACnB,IAAI,EAAE;IAC7BzC,eAAe,CAACyC,IAAI,CAAC;IACrB;IACA;EACF;;EAEA,SAASc,cAAcA,CAAA,EAAG;IACxB;IACAnE,yBAAyB,CAAC,KAAK,CAAC;IAChCE,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,wBAAwB,CAAC,KAAK,CAAC;IAC/BE,wBAAwB,CAAC,KAAK,CAAC;IAC/BM,eAAe,CAAC,IAAI,CAAC;IACrBJ,oBAAoB,CAAC,KAAK,CAAC;EAC7B;EAEA,SAASiE,gBAAgBA,CAACC,IAAI,EAAE;IAC9B1F,GAAG,CACA2F,cAAc,CAACD,IAAI,CAAC,CACpB3C,IAAI,CAAC6C,aAAa,IAAI;MACrB9D,cAAc,CAAC+D,QAAQ,KAAK;QAC1B,GAAGA,QAAQ;QACX3C,IAAI,EAAE0C,aAAa,CAAC1C,IAAI,IAAI2C,QAAQ,CAAC3C,IAAI;QACzCC,KAAK,EAAEyC,aAAa,CAACzC,KAAK,IAAI0C,QAAQ,CAAC1C;MACzC,CAAC,CAAC,CAAC;MACHgC,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACD5B,KAAK,CAACO,GAAG,IAAI;MACZL,OAAO,CAACD,KAAK,CAAE,WAAUM,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASgC,kBAAkBA,CAACC,IAAI,EAAE;IAChC/F,GAAG,CACAgG,gBAAgB,CAACD,IAAI,CAAC,CACtBhD,IAAI,CAACkD,WAAW,IAAI;MACnBnE,cAAc,CAAC+D,QAAQ,KAAK;QAC1B,GAAGA,QAAQ;QACXzC,MAAM,EAAE6C,WAAW,CAAC7C,MAAM,IAAIyC,QAAQ,CAACzC;MACzC,CAAC,CAAC,CAAC;MACH+B,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACD5B,KAAK,CAACO,GAAG,IAAI;MACZL,OAAO,CAACD,KAAK,CAAE,WAAUM,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASoC,oBAAoBA,CAAC7B,IAAI,EAAE;IAClCrE,GAAG,CACAmG,UAAU,CAAC9B,IAAI,CAAC,CAChBtB,IAAI,CAAC4B,OAAO,IAAI;MACf3C,QAAQ,CAAC,CAAC2C,OAAO,EAAE,GAAG5C,KAAK,CAAC,CAAC;MAC7BoD,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACD5B,KAAK,CAACO,GAAG,IAAIL,OAAO,CAACM,GAAG,CAACD,GAAG,CAAC,CAAC;EACnC;EAEA,SAASG,WAAWA,CAAA,EAAG;IACrB7B,WAAW,CAAC,IAAI,CAAC;EACnB;EAEA,oBACExB,OAAA,CAACX,kBAAkB,CAACmG,QAAQ;IAACC,KAAK,EAAExE,WAAY;IAAAyE,QAAA,eAC9C1F,OAAA;MAAK2F,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5B1F,OAAA,CAAChB,MAAM;QAACuC,QAAQ,EAAEA,QAAS;QAACI,KAAK,EAAEA;MAAM;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5C/F,OAAA,CAACnB,MAAM;QAAA6G,QAAA,gBACL1F,OAAA,CAACpB,KAAK;UACJoH,IAAI,EAAC,UAAU;UACfC,OAAO,eACLjG,OAAA,CAACL,QAAQ;YAACmD,cAAc,EAAEA,cAAe;YAACjC,iBAAiB,EAAEA;UAAkB;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAClF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACF/F,OAAA,CAACpB,KAAK;UACJoH,IAAI,EAAC,UAAU;UACfC,OAAO,eAAEjG,OAAA,CAACN,KAAK;YAAC2D,WAAW,EAAEA,WAAY;YAAC9B,QAAQ,EAAEA;UAAS;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACF/F,OAAA,CAACpB,KAAK;UACJoH,IAAI,EAAC,GAAG;UACRC,OAAO,eACLjG,OAAA,CAACJ,cAAc;YACbqG,OAAO,EAAEhH,IAAK;YACdsC,QAAQ,EAAEA,QAAS;YACnB2E,aAAa,EAAE1B,sBAAuB;YACtC2B,UAAU,EAAE1B,mBAAoB;YAChC2B,YAAY,EAAE1B,qBAAsB;YACpC2B,WAAW,EAAEzB,eAAgB;YAC7B0B,aAAa,EAAE3B,iBAAkB;YACjC4B,UAAU,EAAE/C,cAAe;YAC3BrC,KAAK,EAAEA,KAAM;YACbC,QAAQ,EAAEA;UAAS;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYI,CAAC,eAET/F,OAAA,CAACd,MAAM;QAAA0G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV/F,OAAA,CAACH,WAAW;QACV2G,MAAM,EAAE7F,iBAAkB;QAC1B8F,OAAO,EAAElC,cAAe;QACxBmC,OAAO,EAAE7F;QACT;MAAA;QAAA+E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACF/F,OAAA,CAACV,gBAAgB;QACfkH,MAAM,EAAErG,sBAAuB;QAC/BsG,OAAO,EAAElC,cAAe;QACxBoC,YAAY,EAAE9B;MAAiB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF/F,OAAA,CAACR,aAAa;QACZgH,MAAM,EAAEnG,mBAAoB;QAC5BoG,OAAO,EAAElC,cAAe;QACxB4B,UAAU,EAAEb;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACF/F,OAAA,CAACP,eAAe;QACd+G,MAAM,EAAE/F,qBAAsB;QAC9BgG,OAAO,EAAElC,cAAe;QACxBqC,YAAY,EAAEA,CAAA,KAAMxC,gBAAgB,CAAC/C,oBAAoB;MAAE;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACF/F,OAAA,CAACT,eAAe;QACdiH,MAAM,EAAEjG,qBAAsB;QAC9BkG,OAAO,EAAElC,cAAe;QACxBsC,cAAc,EAAE3B;MAAmB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF/F,OAAA,CAACb,UAAU;QAACsE,IAAI,EAAE1C,YAAa;QAAC0F,OAAO,EAAElC;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAAC7F,EAAA,CAhSQD,GAAG;EAAA,QAaOlB,WAAW;AAAA;AAAA+H,EAAA,GAbrB7G,GAAG;AAkSZ,eAAeA,GAAG;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}