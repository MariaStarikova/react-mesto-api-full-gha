{"ast":null,"code":"export class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n  _getHeaders() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return {\n      Authorization: `Bearer ${jwt}`,\n      ...this.headers\n    };\n  }\n  getInitialCards() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n  getInfoUser() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n  updateUserInfo(userData) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.headers.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(this._checkResponse);\n  }\n  addNewCard(newCardData) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this.headers.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newCardData.description,\n        link: newCardData.image\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n  updateUserAvatar(data) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n}\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    // authorization: '73e5a98c-079b-4b9e-b964-5323cdfb16c2',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","baseUrl","headers","_getHeaders","jwt","localStorage","getItem","Authorization","getInitialCards","fetch","then","_checkResponse","getInfoUser","updateUserInfo","userData","method","authorization","body","JSON","stringify","addNewCard","newCardData","name","description","link","image","addLike","cardId","removeLike","deleteCard","updateUserAvatar","data","avatar","res","ok","Promise","reject","status","json","api"],"sources":["/Users/mariahudakova/Desktop/practicum/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["export class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getHeaders() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return {\n      Authorization: `Bearer ${jwt}`,\n      ...this.headers,\n    };\n  }\n\n  getInitialCards() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n    }).then(this._checkResponse);\n  }\n\n  getInfoUser() {\n    const jwt = localStorage.getItem(\"jwt\");\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n    }).then(this._checkResponse);\n  }\n\n  updateUserInfo(userData) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.headers.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(newCardData) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this.headers.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newCardData.description,\n        link: newCardData.image\n      })\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.headers.authorization\n      }\n    }).then(this._checkResponse);\n  }\n\n  updateUserAvatar(data) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n    return res.json();\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    // authorization: '73e5a98c-079b-4b9e-b964-5323cdfb16c2',\n    'Content-Type': 'application/json'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}