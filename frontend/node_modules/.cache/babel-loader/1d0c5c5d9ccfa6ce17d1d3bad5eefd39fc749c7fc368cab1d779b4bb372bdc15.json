{"ast":null,"code":"var _jsxFileName = \"/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PopupWithForm } from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(props) {\n  _s();\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOpnen = props.isOpen;\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-title\",\n      name: \"input-title\",\n      type: \"text\",\n      className: \"popup__input popup__input_title\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: name || '',\n      onChange: handleChangeName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error input-title-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-description\",\n      name: \"input-description\",\n      type: \"text\",\n      className: \"popup__input popup__input_subtitle\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: description || '',\n      onChange: handleChangeDescription,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error input-description-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"x/N9AhKxTO9Y3OhBmTr1DxbOb8I=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","useEffect","useState","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","EditProfilePopup","props","_s","name","setName","description","setDescription","currentUser","useContext","isOpnen","isOpen","about","handleChangeName","e","target","value","handleChangeDescription","handleSubmit","preventDefault","onUpdateUser","title","buttonText","onClose","onSubmit","children","id","type","className","placeholder","minLength","maxLength","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PopupWithForm } from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState(null);\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOpnen = props.isOpen;\n\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Редактировать профиль\"\n      name=\"edit\"\n      buttonText=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        id=\"input-title\"\n        name=\"input-title\"\n        type=\"text\"\n        className=\"popup__input popup__input_title\"\n        placeholder=\"Имя\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name || ''}\n        onChange={handleChangeName}\n        required\n      />\n      <span className=\"popup__input-error input-title-error\"></span>\n      <input\n        id=\"input-description\"\n        name=\"input-description\"\n        type=\"text\"\n        className=\"popup__input popup__input_subtitle\"\n        placeholder=\"Описание\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description || ''}\n        onChange={handleChangeDescription}\n        required\n      />\n      <span className=\"popup__input-error input-description-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}