{"ast":null,"code":"var _jsxFileName = \"/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDeletePopup from './CardDeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [selectedCardToDelete, setSelectedCardToDelete] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('isLoggedIn') || false);\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   api\n  //     .getInfoUser()\n  //     .then(userInfo => {\n  //       setCurrentUser({\n  //         name: userInfo.name,\n  //         about: userInfo.about,\n  //         avatar: userInfo.avatar,\n  //         id: userInfo._id\n  //       });\n  //       // console.log(userInfo);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then(cardsData => {\n  //       // console.log('cardsData:', cardsData);\n  //       setCards(cardsData);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth.checkToken(token).then(res => {\n        if (res.data) {\n          setEmail(res.data.email);\n          setLoggedIn(true);\n          navigate('/', {\n            replace: true\n          });\n        }\n      }).catch(err => {\n        console.error(err);\n        localStorage.clear();\n      });\n    }\n  }, [navigate]);\n  useEffect(() => {\n    // const token = localStorage.getItem('jwt');\n    if (loggedIn) {\n      Promise.all([api.getInfoUser(), api.getInitialCards()]).then(([userInfo, cardsData]) => {\n        setCurrentUser({\n          name: userInfo.name,\n          about: userInfo.about,\n          avatar: userInfo.avatar,\n          id: userInfo._id\n        });\n        setCards(cardsData);\n      }).catch(error => {\n        console.error(`Ошибка при получении данных: ${error}`);\n      });\n    }\n  }, [loggedIn]);\n  function handleRegister(password, email) {\n    auth.register(password, email).then(() => {\n      setIsRegisterSuccess(true);\n      // setIsInfoTooltipOpen(true);\n      navigate('/sign-in', {\n        replace: true\n      });\n    }).catch(err => {\n      console.log(err);\n      setIsRegisterSuccess(false);\n      // setIsInfoTooltipOpen(true);\n    }).finally(() => {\n      setIsInfoTooltipOpen(true);\n    });\n  }\n  function handleLogin({\n    password,\n    email\n  }) {\n    auth.authorize(password, email).then(jwt => {\n      if (jwt.token) {\n        // console.log('email:', email);\n        // console.log('password:', password);\n        // console.log('token:', jwt.token);\n        localStorage.setItem('jwt', jwt.token);\n        setEmail(email);\n        // console.log('email:', email);\n        setLoggedIn(true);\n        navigate('/', {\n          replace: true\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      // console.log('email:', email);\n      // console.log('password:', password);\n      setIsRegisterSuccess(false);\n      setIsInfoTooltipOpen(true);\n    });\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser.id);\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n      return;\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n      return;\n    }\n  }\n  function handleCardDelete() {\n    api.deleteCard(selectedCardToDelete._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== selectedCardToDelete._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleDeleteClick(card) {\n    // console.log(card);\n    setIsCardDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    // console.log(card);\n    // console.log(handleCardClick);\n  }\n\n  function closeAllPopups() {\n    // console.log('Попапы закрыты');\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardDeletePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n  function handleUpdateUser(user) {\n    api.updateUserInfo(user).then(updatedFields => {\n      setCurrentUser(prevUser => ({\n        ...prevUser,\n        name: updatedFields.name || prevUser.name,\n        about: updatedFields.about || prevUser.about\n      }));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleUpdateAvatar(data) {\n    api.updateUserAvatar(data).then(updatedData => {\n      setCurrentUser(prevUser => ({\n        ...prevUser,\n        avatar: updatedData.avatar || prevUser.avatar\n      }));\n      closeAllPopups();\n    }).catch(err => {\n      console.error(`Ошибка: ${err}`);\n    });\n  }\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  function handleSignOut() {\n    localStorage.removeItem('jwt');\n    setEmail('');\n    setLoggedIn(false);\n    navigate('/sign-in', {\n      replace: true\n    });\n  }\n\n  // function handleLogin() {\n  //   setLoggedIn(true);\n  // }\n  console.log(localStorage.getItem('email'));\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            isRegisterSuccess: isRegisterSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            element: Main,\n            loggedIn: loggedIn,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            onDeleteClick: handleDeleteClick,\n            onCardLike: handleCardLike,\n            cards: cards,\n            setCards: setCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        success: isRegisterSuccess\n        // onUpdateUser={handleUpdateUser}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardDeletePopup, {\n        isOpen: isCardDeletePopupOpen,\n        onClose: closeAllPopups,\n        onCardDelete: () => handleCardDelete(selectedCardToDelete)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hp7LKcEq6yLya0Q+ozkDijGs6UU=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Routes","useNavigate","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CardDeletePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardDeletePopupOpen","setIsCardDeletePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isRegisterSuccess","setIsRegisterSuccess","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","selectedCardToDelete","setSelectedCardToDelete","loggedIn","setLoggedIn","localStorage","getItem","email","setEmail","navigate","token","checkToken","then","res","data","replace","catch","err","console","error","clear","Promise","all","getInfoUser","getInitialCards","userInfo","cardsData","name","about","avatar","id","_id","handleRegister","password","register","log","finally","handleLogin","authorize","jwt","setItem","handleCardLike","card","isLiked","likes","some","i","addLike","newCard","state","map","c","removeLike","handleCardDelete","deleteCard","filter","closeAllPopups","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleDeleteClick","handleCardClick","handleUpdateUser","user","updateUserInfo","updatedFields","prevUser","handleUpdateAvatar","updateUserAvatar","updatedData","handleAddPlaceSubmit","addNewCard","handleSignOut","removeItem","Provider","value","children","className","onSignOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onDeleteClick","onCardLike","isOpen","onClose","success","onUpdateUser","onCardDelete","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport CardDeletePopup from './CardDeletePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [selectedCardToDelete, setSelectedCardToDelete] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('isLoggedIn') || false);\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   api\n  //     .getInfoUser()\n  //     .then(userInfo => {\n  //       setCurrentUser({\n  //         name: userInfo.name,\n  //         about: userInfo.about,\n  //         avatar: userInfo.avatar,\n  //         id: userInfo._id\n  //       });\n  //       // console.log(userInfo);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then(cardsData => {\n  //       // console.log('cardsData:', cardsData);\n  //       setCards(cardsData);\n  //     })\n  //     .catch(error => {\n  //       console.error(`Ошибка при получении данных: ${error}`);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth\n        .checkToken(token)\n        .then(res => {\n          if (res.data) {\n            setEmail(res.data.email);\n            setLoggedIn(true);\n            navigate('/', { replace: true });\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          localStorage.clear();\n        });\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    // const token = localStorage.getItem('jwt');\n    if (loggedIn) {\n      Promise.all([api.getInfoUser(), api.getInitialCards()])\n        .then(([userInfo, cardsData]) => {\n          setCurrentUser({\n            name: userInfo.name,\n            about: userInfo.about,\n            avatar: userInfo.avatar,\n            id: userInfo._id\n          });\n          setCards(cardsData);\n        })\n        .catch(error => {\n          console.error(`Ошибка при получении данных: ${error}`);\n        });\n    }\n  }, [loggedIn]);\n\n  function handleRegister(password, email) {\n    auth\n      .register(password, email)\n      .then(() => {\n        setIsRegisterSuccess(true);\n        // setIsInfoTooltipOpen(true);\n        navigate('/sign-in', { replace: true });\n      })\n      .catch(err => {\n        console.log(err);\n        setIsRegisterSuccess(false);\n        // setIsInfoTooltipOpen(true);\n      })\n      .finally(() => {\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleLogin({ password, email }) {\n    auth\n      .authorize(password, email)\n      .then(jwt => {\n        if (jwt.token) {\n          // console.log('email:', email);\n          // console.log('password:', password);\n          // console.log('token:', jwt.token);\n          localStorage.setItem('jwt', jwt.token);\n          setEmail(email);\n          // console.log('email:', email);\n          setLoggedIn(true);\n          navigate('/', { replace: true });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        // console.log('email:', email);\n        // console.log('password:', password);\n        setIsRegisterSuccess(false);\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser.id);\n\n    if (!isLiked) {\n      api\n        .addLike(card._id)\n        .then(newCard => {\n          setCards(state => state.map(c => (c._id === card._id ? newCard : c)));\n        })\n        .catch(err => {\n          console.error(`Ошибка: ${err}`);\n        });\n      return;\n    } else {\n      api\n        .removeLike(card._id)\n        .then(newCard => {\n          setCards(state => state.map(c => (c._id === card._id ? newCard : c)));\n        })\n        .catch(err => {\n          console.error(`Ошибка: ${err}`);\n        });\n      return;\n    }\n  }\n\n  function handleCardDelete() {\n    api\n      .deleteCard(selectedCardToDelete._id)\n      .then(() => {\n        setCards(cards => cards.filter(c => c._id !== selectedCardToDelete._id));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleDeleteClick(card) {\n    // console.log(card);\n    setIsCardDeletePopupOpen(true);\n    setSelectedCardToDelete(card);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    // console.log(card);\n    // console.log(handleCardClick);\n  }\n\n  function closeAllPopups() {\n    // console.log('Попапы закрыты');\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsCardDeletePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser(user) {\n    api\n      .updateUserInfo(user)\n      .then(updatedFields => {\n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          name: updatedFields.name || prevUser.name,\n          about: updatedFields.about || prevUser.about\n        }));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .updateUserAvatar(data)\n      .then(updatedData => {\n        setCurrentUser(prevUser => ({\n          ...prevUser,\n          avatar: updatedData.avatar || prevUser.avatar\n        }));\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.error(`Ошибка: ${err}`);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api\n      .addNewCard(card)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err));\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem('jwt');\n    setEmail('');\n    setLoggedIn(false);\n    navigate('/sign-in', { replace: true });\n  }\n\n  // function handleLogin() {\n  //   setLoggedIn(true);\n  // }\n  console.log(localStorage.getItem('email'));\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page__content\">\n        <Header loggedIn={loggedIn} email={email} onSignOut={handleSignOut} />\n        <Routes>\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register handleRegister={handleRegister} isRegisterSuccess={isRegisterSuccess} />\n            }\n          />\n          <Route\n            path=\"/sign-in\"\n            element={<Login handleLogin={handleLogin} loggedIn={loggedIn} />}\n          />\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                element={Main}\n                loggedIn={loggedIn}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onDeleteClick={handleDeleteClick}\n                onCardLike={handleCardLike}\n                cards={cards}\n                setCards={setCards}\n              />\n            }\n          />\n\n          {/* <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onDeleteClick={handleDeleteClick}\n            onCardLike={handleCardLike}\n            cards={cards}\n            setCards={setCards}\n          /> */}\n        </Routes>\n        {loggedIn && <Footer />}\n        {/* <Footer /> */}\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          success={isRegisterSuccess}\n          // onUpdateUser={handleUpdateUser}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n        <CardDeletePopup\n          isOpen={isCardDeletePopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={() => handleCardDelete(selectedCardToDelete)}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,GAAG,QAAQ,cAAc;AAClC,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,KAAKC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC2B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAAC6B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAAC+B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC6C,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC;EACrF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMiD,QAAQ,GAAG9C,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAJ,SAAS,CAAC,MAAM;IACd,MAAMmD,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAII,KAAK,EAAE;MACThC,IAAI,CACDiC,UAAU,CAACD,KAAK,CAAC,CACjBE,IAAI,CAACC,GAAG,IAAI;QACX,IAAIA,GAAG,CAACC,IAAI,EAAE;UACZN,QAAQ,CAACK,GAAG,CAACC,IAAI,CAACP,KAAK,CAAC;UACxBH,WAAW,CAAC,IAAI,CAAC;UACjBK,QAAQ,CAAC,GAAG,EAAE;YAAEM,OAAO,EAAE;UAAK,CAAC,CAAC;QAClC;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBZ,YAAY,CAACe,KAAK,CAAC,CAAC;MACtB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEdlD,SAAS,CAAC,MAAM;IACd;IACA,IAAI4C,QAAQ,EAAE;MACZkB,OAAO,CAACC,GAAG,CAAC,CAACtD,GAAG,CAACuD,WAAW,CAAC,CAAC,EAAEvD,GAAG,CAACwD,eAAe,CAAC,CAAC,CAAC,CAAC,CACpDZ,IAAI,CAAC,CAAC,CAACa,QAAQ,EAAEC,SAAS,CAAC,KAAK;QAC/B5B,cAAc,CAAC;UACb6B,IAAI,EAAEF,QAAQ,CAACE,IAAI;UACnBC,KAAK,EAAEH,QAAQ,CAACG,KAAK;UACrBC,MAAM,EAAEJ,QAAQ,CAACI,MAAM;UACvBC,EAAE,EAAEL,QAAQ,CAACM;QACf,CAAC,CAAC;QACF/B,QAAQ,CAAC0B,SAAS,CAAC;MACrB,CAAC,CAAC,CACDV,KAAK,CAACG,KAAK,IAAI;QACdD,OAAO,CAACC,KAAK,CAAE,gCAA+BA,KAAM,EAAC,CAAC;MACxD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,SAAS6B,cAAcA,CAACC,QAAQ,EAAE1B,KAAK,EAAE;IACvC7B,IAAI,CACDwD,QAAQ,CAACD,QAAQ,EAAE1B,KAAK,CAAC,CACzBK,IAAI,CAAC,MAAM;MACVlB,oBAAoB,CAAC,IAAI,CAAC;MAC1B;MACAe,QAAQ,CAAC,UAAU,EAAE;QAAEM,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACiB,GAAG,CAAClB,GAAG,CAAC;MAChBvB,oBAAoB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,CACD0C,OAAO,CAAC,MAAM;MACb5C,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,SAAS6C,WAAWA,CAAC;IAAEJ,QAAQ;IAAE1B;EAAM,CAAC,EAAE;IACxC7B,IAAI,CACD4D,SAAS,CAACL,QAAQ,EAAE1B,KAAK,CAAC,CAC1BK,IAAI,CAAC2B,GAAG,IAAI;MACX,IAAIA,GAAG,CAAC7B,KAAK,EAAE;QACb;QACA;QACA;QACAL,YAAY,CAACmC,OAAO,CAAC,KAAK,EAAED,GAAG,CAAC7B,KAAK,CAAC;QACtCF,QAAQ,CAACD,KAAK,CAAC;QACf;QACAH,WAAW,CAAC,IAAI,CAAC;QACjBK,QAAQ,CAAC,GAAG,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACiB,GAAG,CAAClB,GAAG,CAAC;MAChB;MACA;MACAvB,oBAAoB,CAAC,KAAK,CAAC;MAC3BF,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,SAASiD,cAAcA,CAACC,IAAI,EAAE;IAC5B,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,GAAG,KAAKlC,WAAW,CAACiC,EAAE,CAAC;IAE9D,IAAI,CAACa,OAAO,EAAE;MACZ3E,GAAG,CACA+E,OAAO,CAACL,IAAI,CAACX,GAAG,CAAC,CACjBnB,IAAI,CAACoC,OAAO,IAAI;QACfhD,QAAQ,CAACiD,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACpB,GAAG,KAAKW,IAAI,CAACX,GAAG,GAAGiB,OAAO,GAAGG,CAAE,CAAC,CAAC;MACvE,CAAC,CAAC,CACDnC,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAAE,WAAUF,GAAI,EAAC,CAAC;MACjC,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACLjD,GAAG,CACAoF,UAAU,CAACV,IAAI,CAACX,GAAG,CAAC,CACpBnB,IAAI,CAACoC,OAAO,IAAI;QACfhD,QAAQ,CAACiD,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACpB,GAAG,KAAKW,IAAI,CAACX,GAAG,GAAGiB,OAAO,GAAGG,CAAE,CAAC,CAAC;MACvE,CAAC,CAAC,CACDnC,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAAE,WAAUF,GAAI,EAAC,CAAC;MACjC,CAAC,CAAC;MACJ;IACF;EACF;EAEA,SAASoC,gBAAgBA,CAAA,EAAG;IAC1BrF,GAAG,CACAsF,UAAU,CAACrD,oBAAoB,CAAC8B,GAAG,CAAC,CACpCnB,IAAI,CAAC,MAAM;MACVZ,QAAQ,CAACD,KAAK,IAAIA,KAAK,CAACwD,MAAM,CAACJ,CAAC,IAAIA,CAAC,CAACpB,GAAG,KAAK9B,oBAAoB,CAAC8B,GAAG,CAAC,CAAC;MACxEyB,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACDxC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAE,WAAUF,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASwC,sBAAsBA,CAAA,EAAG;IAChCzE,yBAAyB,CAAC,IAAI,CAAC;EACjC;EAEA,SAAS0E,mBAAmBA,CAAA,EAAG;IAC7BxE,sBAAsB,CAAC,IAAI,CAAC;EAC9B;EAEA,SAASyE,qBAAqBA,CAAA,EAAG;IAC/BvE,wBAAwB,CAAC,IAAI,CAAC;EAChC;EAEA,SAASwE,iBAAiBA,CAAClB,IAAI,EAAE;IAC/B;IACApD,wBAAwB,CAAC,IAAI,CAAC;IAC9BY,uBAAuB,CAACwC,IAAI,CAAC;EAC/B;EAEA,SAASmB,eAAeA,CAACnB,IAAI,EAAE;IAC7B9C,eAAe,CAAC8C,IAAI,CAAC;IACrB;IACA;EACF;;EAEA,SAASc,cAAcA,CAAA,EAAG;IACxB;IACAxE,yBAAyB,CAAC,KAAK,CAAC;IAChCE,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,wBAAwB,CAAC,KAAK,CAAC;IAC/BE,wBAAwB,CAAC,KAAK,CAAC;IAC/BM,eAAe,CAAC,IAAI,CAAC;IACrBJ,oBAAoB,CAAC,KAAK,CAAC;EAC7B;EAEA,SAASsE,gBAAgBA,CAACC,IAAI,EAAE;IAC9B/F,GAAG,CACAgG,cAAc,CAACD,IAAI,CAAC,CACpBnD,IAAI,CAACqD,aAAa,IAAI;MACrBnE,cAAc,CAACoE,QAAQ,KAAK;QAC1B,GAAGA,QAAQ;QACXvC,IAAI,EAAEsC,aAAa,CAACtC,IAAI,IAAIuC,QAAQ,CAACvC,IAAI;QACzCC,KAAK,EAAEqC,aAAa,CAACrC,KAAK,IAAIsC,QAAQ,CAACtC;MACzC,CAAC,CAAC,CAAC;MACH4B,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACDxC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAE,WAAUF,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASkD,kBAAkBA,CAACrD,IAAI,EAAE;IAChC9C,GAAG,CACAoG,gBAAgB,CAACtD,IAAI,CAAC,CACtBF,IAAI,CAACyD,WAAW,IAAI;MACnBvE,cAAc,CAACoE,QAAQ,KAAK;QAC1B,GAAGA,QAAQ;QACXrC,MAAM,EAAEwC,WAAW,CAACxC,MAAM,IAAIqC,QAAQ,CAACrC;MACzC,CAAC,CAAC,CAAC;MACH2B,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACDxC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAE,WAAUF,GAAI,EAAC,CAAC;IACjC,CAAC,CAAC;EACN;EAEA,SAASqD,oBAAoBA,CAAC5B,IAAI,EAAE;IAClC1E,GAAG,CACAuG,UAAU,CAAC7B,IAAI,CAAC,CAChB9B,IAAI,CAACoC,OAAO,IAAI;MACfhD,QAAQ,CAAC,CAACgD,OAAO,EAAE,GAAGjD,KAAK,CAAC,CAAC;MAC7ByD,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,CACDxC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACiB,GAAG,CAAClB,GAAG,CAAC,CAAC;EACnC;EAEA,SAASuD,aAAaA,CAAA,EAAG;IACvBnE,YAAY,CAACoE,UAAU,CAAC,KAAK,CAAC;IAC9BjE,QAAQ,CAAC,EAAE,CAAC;IACZJ,WAAW,CAAC,KAAK,CAAC;IAClBK,QAAQ,CAAC,UAAU,EAAE;MAAEM,OAAO,EAAE;IAAK,CAAC,CAAC;EACzC;;EAEA;EACA;EACA;EACAG,OAAO,CAACiB,GAAG,CAAC9B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAE1C,oBACE1B,OAAA,CAACX,kBAAkB,CAACyG,QAAQ;IAACC,KAAK,EAAE9E,WAAY;IAAA+E,QAAA,eAC9ChG,OAAA;MAAKiG,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BhG,OAAA,CAAChB,MAAM;QAACuC,QAAQ,EAAEA,QAAS;QAACI,KAAK,EAAEA,KAAM;QAACuE,SAAS,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEtG,OAAA,CAAClB,MAAM;QAAAkH,QAAA,gBACLhG,OAAA,CAACnB,KAAK;UACJ0H,IAAI,EAAC,UAAU;UACfC,OAAO,eACLxG,OAAA,CAACL,QAAQ;YAACyD,cAAc,EAAEA,cAAe;YAACvC,iBAAiB,EAAEA;UAAkB;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAClF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFtG,OAAA,CAACnB,KAAK;UACJ0H,IAAI,EAAC,UAAU;UACfC,OAAO,eAAExG,OAAA,CAACN,KAAK;YAAC+D,WAAW,EAAEA,WAAY;YAAClC,QAAQ,EAAEA;UAAS;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACFtG,OAAA,CAACnB,KAAK;UACJ0H,IAAI,EAAC,GAAG;UACRC,OAAO,eACLxG,OAAA,CAACJ,cAAc;YACb4G,OAAO,EAAEvH,IAAK;YACdsC,QAAQ,EAAEA,QAAS;YACnBkF,aAAa,EAAE5B,sBAAuB;YACtC6B,UAAU,EAAE5B,mBAAoB;YAChC6B,YAAY,EAAE5B,qBAAsB;YACpC6B,WAAW,EAAE3B,eAAgB;YAC7B4B,aAAa,EAAE7B,iBAAkB;YACjC8B,UAAU,EAAEjD,cAAe;YAC3B1C,KAAK,EAAEA,KAAM;YACbC,QAAQ,EAAEA;UAAS;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYI,CAAC,EACR/E,QAAQ,iBAAIvB,OAAA,CAACd,MAAM;QAAAiH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvBtG,OAAA,CAACH,WAAW;QACVkH,MAAM,EAAEpG,iBAAkB;QAC1BqG,OAAO,EAAEpC,cAAe;QACxBqC,OAAO,EAAEpG;QACT;MAAA;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACFtG,OAAA,CAACV,gBAAgB;QACfyH,MAAM,EAAE5G,sBAAuB;QAC/B6G,OAAO,EAAEpC,cAAe;QACxBsC,YAAY,EAAEhC;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFtG,OAAA,CAACR,aAAa;QACZuH,MAAM,EAAE1G,mBAAoB;QAC5B2G,OAAO,EAAEpC,cAAe;QACxB8B,UAAU,EAAEhB;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFtG,OAAA,CAACP,eAAe;QACdsH,MAAM,EAAEtG,qBAAsB;QAC9BuG,OAAO,EAAEpC,cAAe;QACxBuC,YAAY,EAAEA,CAAA,KAAM1C,gBAAgB,CAACpD,oBAAoB;MAAE;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACFtG,OAAA,CAACT,eAAe;QACdwH,MAAM,EAAExG,qBAAsB;QAC9ByG,OAAO,EAAEpC,cAAe;QACxBwC,cAAc,EAAE7B;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFtG,OAAA,CAACb,UAAU;QAAC2E,IAAI,EAAE/C,YAAa;QAACiG,OAAO,EAAEpC;MAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAACpG,EAAA,CArUQD,GAAG;EAAA,QAaOlB,WAAW;AAAA;AAAAsI,EAAA,GAbrBpH,GAAG;AAuUZ,eAAeA,GAAG;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}