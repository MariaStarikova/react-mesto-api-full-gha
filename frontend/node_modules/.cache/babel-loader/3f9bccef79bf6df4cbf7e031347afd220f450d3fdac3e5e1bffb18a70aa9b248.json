{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res));\n};\nconst checkResponse = res => {\n  if (!res.ok) {\n    console.error(`Ошибка ${res.status}: ${res.statusText}`);\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  return res.json();\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","checkResponse","authorize","checkToken","token","Authorization","ok","console","error","status","statusText","Promise","reject","json"],"sources":["/Users/mariahudakova/Desktop/practicum/dev/mesto-react/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  }).then(res => checkResponse(res));\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  }).then(res => checkResponse(res));\n};\n\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      //   Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res));\n};\n\nconst checkResponse = res => {\n  if (!res.ok) {\n    console.error(`Ошибка ${res.status}: ${res.statusText}`);\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  return res.json();\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,MAAME,SAAS,GAAGA,CAACX,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP;MACA,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGC,KAAK,IAAI;EACjC,OAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP;MACA,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CAACL,IAAI,CAACC,GAAG,IAAIC,aAAa,CAACD,GAAG,CAAC,CAAC;AACpC,CAAC;AAED,MAAMC,aAAa,GAAGD,GAAG,IAAI;EAC3B,IAAI,CAACA,GAAG,CAACM,EAAE,EAAE;IACXC,OAAO,CAACC,KAAK,CAAE,UAASR,GAAG,CAACS,MAAO,KAAIT,GAAG,CAACU,UAAW,EAAC,CAAC;IACxD,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASZ,GAAG,CAACS,MAAO,EAAC,CAAC;EAC/C;EACA,OAAOT,GAAG,CAACa,IAAI,CAAC,CAAC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}